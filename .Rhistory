```{r setup, include=FALSE}
```{r setup, include=FALSE}
library(flexdashboard)
install.packages(flexdashboard)
install.packages("flexdashboard")
install.packages("plotly")
install.packages("readxl")
library(flexdashboard)
library(tidyverse)
library(plotly)
library(readxl)
# Load data (読み込み)
data <- read_excel("IHME_GBD_2021_MORTALITY.xlsx")
# Load data
data <- read_excel("IHME_GBD_2021_MORTALITY.xlsx")
# Load data
data <- read_excel("IHME_GBD_2021_MORTALITY.xlsx")
data <- read_excel("IHME_GBD_2021_MORTALITY.xlsx")
# select disease
selected_cancers <- c("Breast cancer", "Tracheal, bronchus, and lung cancer", "Colon and rectum cancer",
"Prostate cancer", "Liver cancer due to hepatitis B", "Cervical cancer",
"Esophageal cancer", "Pancreatic cancer", "Kidney cancer", "Stomach cancer")
# select regions
selected_regions <- c("Global", "Central Asia", "Central Europe", "Eastern Europe", "Australasia", "Western Europe",
"Andean Latin America", "Caribbean", "Southern Latin America", "Central Latin America",
"North Africa and Middle East", "South Asia", "East Asia", "Oceania", "Southeast Asia",
"Central Sub-Saharan Africa", "Eastern Sub-Saharan Africa", "Southern Sub-Saharan Africa",
"Western Sub-Saharan Africa")
View(data)
selected_regions <- c("Central Asia", "Central Europe", "Eastern Europe", "Australasia", "Western Europe",
"Andean Latin America", "Caribbean", "Southern Latin America", "Central Latin America",
"North Africa and Middle East", "South Asia", "East Asia", "Oceania", "Southeast Asia",
"Central Sub-Saharan Africa", "Eastern Sub-Saharan Africa", "Southern Sub-Saharan Africa",
"Western Sub-Saharan Africa")
long_data <- data %>%
pivot_longer(cols = matches("\\d{4} \(ASMR\)"),
# organize the data
long_data <- data %>%
pivot_longer(cols = matches("\\d{4} \(ASMR\)"),
# organize the data
long_data <- data %>%
pivot_longer(cols = matches("\\d{4} \\(ASMR\\)"),
names_to = "year", values_to = "ASMR") %>%
mutate(year = as.numeric(str_extract(year, "\\d{4}")))
View(data)
```{r setup, include=FALSE}
library(flexdashboard)
library(tidyverse)
library(plotly)
library(readxl)
# Load data
data <- read_excel("IHME_GBD_2021_MORTALITY.xlsx")
# select disease
selected_cancers <- c("Breast cancer", "Tracheal, bronchus, and lung cancer", "Colon and rectum cancer",
"Prostate cancer", "Liver cancer due to hepatitis B", "Cervical cancer",
"Esophageal cancer", "Pancreatic cancer", "Kidney cancer", "Stomach cancer")
# select regions
selected_regions <- c("Central Asia", "Central Europe", "Eastern Europe", "Australasia", "Western Europe",
"Andean Latin America", "Caribbean", "Southern Latin America", "Central Latin America",
"North Africa and Middle East", "South Asia", "East Asia", "Oceania", "Southeast Asia",
"Central Sub-Saharan Africa", "Eastern Sub-Saharan Africa", "Southern Sub-Saharan Africa",
"Western Sub-Saharan Africa")
# organize the data
long_data <- data %>%
pivot_longer(cols = matches("\\d{4} \\(ASMR\\)"),
names_to = "year", values_to = "ASMR") %>%
mutate(year = as.numeric(str_extract(year, "\\d{4}")))
colnames(data)
# Load data
data <- read_excel("IHME_GBD_2021_MORTALITY.xlsx", skip = 1)
colnames(data)
# organize the data
long_data <- data %>%
pivot_longer(cols = matches("\\d{4} \\(ASMR\\)"),
names_to = "year", values_to = "ASMR") %>%
mutate(year = as.numeric(str_extract(year, "\\d{4}")))
# Global Cancer Mortality Trends
trend_data <- long_data %>%
filter(location_name == "Global", cause_name %in% selected_cancers)
# Interactive Plotly Line Chart
plot_ly(trend_data, x = ~year, y = ~ASMR, color = ~cause_name, type = 'scatter', mode = 'lines+markers',
hoverinfo = 'text',
text = ~paste('Cancer Type:', cause_name, '<br>Year:', year, '<br>ASMR:', round(ASMR,2), '(per 100,000)')) %>%
layout(title = "Global Cancer Mortality Rates Over Time (1990-2021)",
xaxis = list(title = "Year"),
yaxis = list(title = "Age-Standardized Mortality Rate (per 100,000)"),
legend = list(title=list(text='Cancer Type')))
trend_data <- trend_data %>%
mutate(ASMR = as.numeric(str_extract(ASMR, "^[0-9\\.]+")))
# Plot
plot_ly(distribution_data, x = ~location_name, y = ~ASMR, color = ~cause_name, type = 'box',
hoverinfo = 'text',
text = ~paste('Region:', location_name, '<br>Cancer Type:', cause_name, '<br>ASMR:', round(ASMR,2), '(per 100,000)')) %>%
layout(title = "Regional Cancer Mortality Distribution (2021)",
xaxis = list(title = "Region", tickangle = -45),
yaxis = list(title = "Age-Standardized Mortality Rate (per 100,000)"),
boxmode = 'group')
# Global Cancer Mortality Trends
trend_data <- long_data %>%
filter(location_name == "Global", cause_name %in% selected_cancers)
# Interactive Plotly Line Chart
plot_ly(trend_data, x = ~year, y = ~ASMR, color = ~cause_name, type = 'scatter', mode = 'lines+markers',
hoverinfo = 'text',
text = ~paste('Cancer Type:', cause_name, '<br>Year:', year, '<br>ASMR:', round(ASMR,2), '(per 100,000)')) %>%
layout(title = "Global Cancer Mortality Rates Over Time (1990-2021)",
xaxis = list(title = "Year"),
yaxis = list(title = "Age-Standardized Mortality Rate (per 100,000)"),
legend = list(title=list(text='Cancer Type')))
trend_data <- trend_data %>%
mutate(ASMR = as.numeric(str_extract(ASMR, "^[0-9\\.]+")))
# Global Cancer Mortality Trends
trend_data <- long_data %>%
filter(location_name == "Global", cause_name %in% selected_cancers)
# Interactive Plotly Line Chart
plot_ly(trend_data, x = ~year, y = ~ASMR, color = ~cause_name, type = 'scatter', mode = 'lines+markers',
hoverinfo = 'text',
text = ~paste('Cancer Type:', cause_name, '<br>Year:', year, '<br>ASMR:', round(ASMR,2), '(per 100,000)')) %>%
layout(title = "Global Cancer Mortality Rates Over Time (1990-2021)",
xaxis = list(title = "Year"),
yaxis = list(title = "Age-Standardized Mortality Rate (per 100,000)"),
legend = list(title=list(text='Cancer Type')))
# 2021 data by reagion
distribution_data <- long_data %>%
filter(location_name %in% selected_regions, cause_name %in% selected_cancers, year == 2021)
# Plot
trend_data <- trend_data %>%
mutate(ASMR = as.numeric(str_extract(ASMR, "^[0-9\\.]+")))
plot_ly(distribution_data, x = ~location_name, y = ~ASMR, color = ~cause_name, type = 'box',
hoverinfo = 'text',
text = ~paste('Region:', location_name, '<br>Cancer Type:', cause_name, '<br>ASMR:', round(ASMR,2), '(per 100,000)')) %>%
layout(title = "Regional Cancer Mortality Distribution (2021)",
xaxis = list(title = "Region", tickangle = -45),
yaxis = list(title = "Age-Standardized Mortality Rate (per 100,000)"),
boxmode = 'group')
View(data)
source("~/2023.8-/Class/1DATA555/final_project/final_project1.R")
library(stringr)
# Plot
trend_data <- trend_data %>%
mutate(ASMR = as.numeric(str_extract(ASMR, "^[0-9\\.]+")))
plot_ly(distribution_data, x = ~location_name, y = ~ASMR, color = ~cause_name, type = 'box',
hoverinfo = 'text',
text = ~paste('Region:', location_name, '<br>Cancer Type:', cause_name, '<br>ASMR:', round(ASMR,2), '(per 100,000)')) %>%
layout(title = "Regional Cancer Mortality Distribution (2021)",
xaxis = list(title = "Region", tickangle = -45),
yaxis = list(title = "Age-Standardized Mortality Rate (per 100,000)"),
boxmode = 'group')
View(data)
t
# Plot
trend_data <- trend_data %>%
mutate(ASMR = as.numeric(str_extract(ASMR, "^[0-9\\.]+")))
plot_ly(distribution_data, x = ~location_name, y = ~ASMR, color = ~cause_name, type = 'box',
hoverinfo = 'text',
text = ~paste('Region:', location_name, '<br>Cancer Type:', cause_name, '<br>ASMR:', round(ASMR,2), '(per 100,000)')) %>%
layout(title = "Regional Cancer Mortality Distribution (2021)",
xaxis = list(title = "Region", tickangle = -45),
yaxis = list(title = "Age-Standardized Mortality Rate (per 100,000)"),
boxmode = 'group')
# Plot
head(trend_data$ASMR)
plot_ly(distribution_data, x = ~location_name, y = ~ASMR, color = ~cause_name, type = 'box',
hoverinfo = 'text',
text = ~paste('Region:', location_name, '<br>Cancer Type:', cause_name, '<br>ASMR:', round(ASMR,2), '(per 100,000)')) %>%
layout(title = "Regional Cancer Mortality Distribution (2021)",
xaxis = list(title = "Region", tickangle = -45),
yaxis = list(title = "Age-Standardized Mortality Rate (per 100,000)"),
boxmode = 'group')
distribution_data <- distribution_data %>%
mutate(ASMR = str_trim(ASMR),
ASMR = as.numeric(str_extract(ASMR, "^[0-9\\.]+")))
plot_ly(distribution_data, x = ~location_name, y = ~ASMR, color = ~cause_name, type = 'box',
hoverinfo = 'text',
text = ~paste('Region:', location_name, '<br>Cancer Type:', cause_name, '<br>ASMR:', round(ASMR,2), '(per 100,000)')) %>%
layout(title = "Regional Cancer Mortality Distribution (2021)",
xaxis = list(title = "Region", tickangle = -45),
yaxis = list(title = "Age-Standardized Mortality Rate (per 100,000)"),
boxmode = 'group')
library(flexdashboard)
library(tidyverse)
library(plotly)
library(readxl)
# Load data
data <- read_excel("IHME_GBD_2021_MORTALITY.xlsx", skip = 1)
# select disease
selected_cancers <- c("Breast cancer", "Tracheal, bronchus, and lung cancer", "Colon and rectum cancer",
"Prostate cancer", "Liver cancer due to hepatitis B", "Cervical cancer",
"Esophageal cancer", "Pancreatic cancer", "Kidney cancer", "Stomach cancer")
# select regions
selected_regions <- c("Central Asia", "Central Europe", "Eastern Europe", "Australasia", "Western Europe",
"Andean Latin America", "Caribbean", "Southern Latin America", "Central Latin America",
"North Africa and Middle East", "South Asia", "East Asia", "Oceania", "Southeast Asia",
"Central Sub-Saharan Africa", "Eastern Sub-Saharan Africa", "Southern Sub-Saharan Africa",
"Western Sub-Saharan Africa")
# organize the data
long_data <- data %>%
pivot_longer(cols = matches("\\d{4} \\(ASMR\\)"),
names_to = "year", values_to = "ASMR") %>%
mutate(year = as.numeric(str_extract(year, "\\d{4}")))
my_colors <- colorRampPalette(RColorBrewer::brewer.pal(8, "Set2"))(15)
# Global Cancer Mortality Trends
trend_data <- long_data %>%
filter(location_name == "Global", cause_name %in% selected_cancers)
# Interactive Plotly Line Chart
plot_ly(trend_data, x = ~year, y = ~ASMR, color = ~cause_name, colors = my_colors, type = 'scatter', mode = 'lines+markers',
hoverinfo = 'text',
text = ~paste('Cancer Type:', cause_name, '<br>Year:', year, '<br>ASMR:', round(ASMR,2), '(per 100,000)')) %>%
layout(title = "Global Cancer Mortality Rates Over Time (1990-2021)",
xaxis = list(title = "Year"),
yaxis = list(title = "Age-Standardized Mortality Rate (per 100,000)"),
legend = list(title=list(text='Cancer Type')))
# Global Cancer Mortality Trends
trend_data <- long_data %>%
filter(location_name == "Global", cause_name %in% selected_cancers)
trend_data <- trend_data %>%
mutate(ASMR = as.numeric(str_extract(ASMR, "^[0-9\\.]+")))
# Interactive Plotly Line Chart
plot_ly(trend_data, x = ~year, y = ~ASMR, color = ~cause_name, colors = my_colors, type = 'scatter', mode = 'lines+markers',
hoverinfo = 'text',
text = ~paste('Cancer Type:', cause_name, '<br>Year:', year, '<br>ASMR:', round(ASMR,2), '(per 100,000)')) %>%
layout(title = "Global Cancer Mortality Rates Over Time (1990-2021)",
xaxis = list(title = "Year"),
yaxis = list(title = "Age-Standardized Mortality Rate (per 100,000)"),
legend = list(title=list(text='Cancer Type')))
install.packages("htmlwidgets")
install.packages("htmlwidgets")
getwd()
remove(final.Rmd)
Please upload an HTML for two interactive widgets and upload the code you used to create them. Refer to the rubric below for details.
remove("final.Rmd")
file.remove("final.Rmd")
file.remove("Untitled.Rmd")
touch Makefile
make
library(here)
here::i_am("code/00_load_data.R")
library(dplyr)
library(here)
# Lodad data
data <- read.csv(here::here("raw_data", "IHME_GBD_2021_MORTALITY.XLSX", skip=1))
library(here)
library(readxl)
# Lodad data
data <- read_excel(here::here("raw_data", "IHME_GBD_2021_MORTALITY.XLSX", skip=1))
# Lodad data
data <- read_excel(here("raw_data", "IHME_GBD_2021_MORTALITY.XLSX", skip=1))
# Lodad data
data <- read_excel(here("raw_data", "IHME_GBD_2021_MORTALITY.XLSX"), skip=1))
# Lodad data
data <- read_excel(here("raw_data", "IHME_GBD_2021_MORTALITY.XLSX"), skip=1)
# Select disease
selected_cancers <- c("Breast cancer", "Tracheal, bronchus, and lung cancer", "Colon and rectum cancer",
"Prostate cancer", "Liver cancer due to hepatitis B", "Cervical cancer",
"Esophageal cancer", "Pancreatic cancer", "Kidney cancer", "Stomach cancer")
# Select regions
selected_regions <- c("Central Asia", "Central Europe", "Eastern Europe", "Australasia", "Western Europe",
"Andean Latin America", "Caribbean", "Southern Latin America", "Central Latin America",
"North Africa and Middle East", "South Asia", "East Asia", "Oceania", "Southeast Asia",
"Central Sub-Saharan Africa", "Eastern Sub-Saharan Africa", "Southern Sub-Saharan Africa",
"Western Sub-Saharan Africa")
# Organize the data
long_data <- data %>%
pivot_longer(cols = matches("\\d{4} \\(ASMR\\)"),
names_to = "year", values_to = "ASMR") %>%
mutate(year = as.numeric(str_extract(year, "\\d{4}")))
here::i_am("code/01_make_chart.R")
long_data <- readRDS(file = here::here("output/data_clean.rds"))
here::i_am("code/00_load_data.R")
library(here)
library(readxl)
# Lodad data
data <- read_excel(here("raw_data", "IHME_GBD_2021_MORTALITY.XLSX"), skip=1)
# Select disease
selected_cancers <- c("Breast cancer", "Tracheal, bronchus, and lung cancer", "Colon and rectum cancer",
"Prostate cancer", "Liver cancer due to hepatitis B", "Cervical cancer",
"Esophageal cancer", "Pancreatic cancer", "Kidney cancer", "Stomach cancer")
# Select regions
selected_regions <- c("Central Asia", "Central Europe", "Eastern Europe", "Australasia", "Western Europe",
"Andean Latin America", "Caribbean", "Southern Latin America", "Central Latin America",
"North Africa and Middle East", "South Asia", "East Asia", "Oceania", "Southeast Asia",
"Central Sub-Saharan Africa", "Eastern Sub-Saharan Africa", "Southern Sub-Saharan Africa",
"Western Sub-Saharan Africa")
# Organize the data
long_data <- data %>%
pivot_longer(cols = matches("\\d{4} \\(ASMR\\)"),
names_to = "year", values_to = "ASMR") %>%
mutate(year = as.numeric(str_extract(year, "\\d{4}")))
saveRDS(long_data, file = here::here("output/data_clean.rds"))
here::i_am("code/01_make_chart.R")
long_data <- readRDS(file = here::here("output/data_clean.rds"))
library(plotly)
# Global Cancer Mortality Trends
trend_data <- long_data %>%
filter(location_name == "Global", cause_name %in% selected_cancers)
trend_data <- trend_data %>%
mutate(ASMR = as.numeric(str_extract(ASMR, "^[0-9\\.]+")))
# Global Cancer Mortality Trends
trend_data <- long_data %>%
filter(location_name == "Global", cause_name %in% selected_cancers)
trend_data <- trend_data %>%
mutate(ASMR = as.numeric(str_extract(ASMR, "^[0-9\\.]+")))
library(stringr)
library(stringr)
trend_data <- trend_data %>%
mutate(ASMR = as.numeric(str_extract(ASMR, "^[0-9\\.]+")))
# Interactive Plotly Line Chart
line_chart <- plot_ly(trend_data, x = ~year, y = ~ASMR, color = ~cause_name, colors = my_colors, type = 'scatter', mode = 'lines+markers',
hoverinfo = 'text',
text = ~paste('Cancer Type:', cause_name, '<br>Year:', year, '<br>ASMR:', round(ASMR,2), '(per 100,000)')) %>%
layout(title = "Global Cancer Mortality Rates Over Time (1990-2021)",
xaxis = list(title = "Year"),
yaxis = list(title = "Age-Standardized Mortality Rate (per 100,000)"),
legend = list(title=list(text='Cancer Type')))
saveRDS(line_chart, file = here::here("output/line_chart.rds"))
here::i_am("code/02_make_plot.R")
long_data <- readRDS(file = here::here("output/data_clean.rds"))
library(plotly)
library(readxl)
# 2021 data by reagion
distribution_data <- long_data %>%
filter(location_name %in% selected_regions, cause_name %in% selected_cancers, year == 2021)
# Plot
distribution_data <- distribution_data %>%
mutate(ASMR = str_trim(ASMR),
ASMR = as.numeric(str_extract(ASMR, "^[0-9\\.]+")))
plot <- plot_ly(distribution_data, x = ~cause_name, y = ~ASMR, color = ~location_name,
colors = my_colors,
type = 'box',
hoverinfo = 'text',
text = ~paste('Region:', location_name, '<br>Region:', cause_name, '<br>ASMR:', round(ASMR,2), '(per 100,000)')) %>%
layout(title = "Regional Cancer Mortality Distribution (2021)",
xaxis = list(title = "Cancer Type", tickangle = -45),
yaxis = list(title = "Age-Standardized Mortality Rate (per 100,000)"))
saveRDS(plot, file = here::here("output/plot.rds"))
here::i_am("code/03_render_report.R")
library(flexdashboard)
render("final_report.Rmd")
library(render)
library("render"")
render("final_report.Rmd")
render("final_report.Rmd")
library("rmarkdown")
render("final_report.Rmd")
make
cd ..
